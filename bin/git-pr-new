#!/usr/bin/env zsh

set -euo pipefail

zparseopts -D -E -draft=draft -wip=draft -stash=stash

function error() {
    printf "%s\n" "$2" >&2
    exit "$1"
}

git-pr_stash save $stash

readonly default_branch="$(git-pr_default_branch)"
readonly pr_commit="${1:-$default_branch}"

readonly branch_name="$(git-pr_branch_name "$pr_commit")"

# Update the remote branch
git fetch origin "$default_branch"

# Create the new branch and switch to it.
git branch --no-track "$branch_name" "origin/$default_branch"
git switch "$branch_name"

# Cherry pick the desired commit.
if ! git cherry-pick "$pr_commit"; then
    git cherry-pick --abort
    git switch "$default_branch"
    git branch -d "$branch_name"
    git-pr_stash pop
    error 1 '\033[0;31mCould not cherry-pick commit. There is probably a dependency to a previous commit.'
fi

git-pr-open $draft

# Go back to $default_branch branch.
git switch "$default_branch"

git-pr_stash pop
