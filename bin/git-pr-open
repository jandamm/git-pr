#!/usr/bin/env zsh

set -euo pipefail

zparseopts -D -E -no-push=push -title:=title -desc:=desc t:=title d:=desc -reviewer::=reviewer -draft=draft -wip=draft || exit

remote_url="$(git ls-remote --get-url)"
readonly remote_url=$remote_url

function push() {
    [[ -z $push ]]
}

function title() {
    printf '%s' "${title[2]:-$(git-pr_get_title)}"
}
function desc() {
    printf '%s\n' "${desc[2]:-$(git-pr_get_desc)}"
}
function reviewer() {
    if [[ -n $reviewer ]]; then
        printf '%s' "${reviewer[1]##--reviewer}"
    else
        git-pr_get_reviewer
    fi
}

case "$remote_url" in
    *github.*)
        if ! hash gh &>/dev/null
        then
            printf 'gh needs to be installed. (brew install gh)\nSee https://github.com/cli/cli\n' >&2
            exit 1
        fi
        if push
        then
            # Create a new remote branch by the same name.
            git -c push.default=current push
        fi
        # Use GitHub's cli to create the PR from the branch.
        eval "gh pr create \
            --title ${(qqq)$(title)} \
            --body ${(qqq)$(desc)} \
            --reviewer ${(qqq)$(reviewer)} \
            ${draft:+--draft}"
        ;;

    *gitlab.*)
        if ! push
        then
            echo 'Gitlab needs a push to create a PR.'
            read -rp "Continue? (y/n): " yn
            [[ "$yn" =~ [Yy].* ]] || exit 1
        fi
        if [[ -n $draft ]] echo 'Creating draft PRs is currently not supported for gitlab.' >&2
        git -c push.default=current push -o merge_request.create
        ;;

    *bitbucket.*)
        if push
        then
            git -c push.default=current push
        fi
        git-pr_open_bitbucket "$remote_url" "${draft:+Draft: }$(title)" "$(desc | tr "\n" ' ')" "$(reviewer)" $draft
        ;;

    *)
        echo "Could not match remote url: $remote_url"
        exit 1 ;;
esac
